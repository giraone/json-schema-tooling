<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.2.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.giraone</groupId>
  <artifactId>jsonschema</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <name>jsonschema</name>
  <description>JSON Schema Test</description>

  <properties>
    <java.version>11</java.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- For using application/json-patch+json -->
    <dependency>
      <groupId>com.github.java-json-tools</groupId>
      <artifactId>json-patch</artifactId>
      <version>1.13</version>
    </dependency>
    <!-- If validation is used -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- OpenApiTools Generator dependencies -->
    <!-- Der Generator (V 4.3.1) erzeugt @ApiModelProperty auch wenn generateModelDocumentation=false gesetzt ist (hs) -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>1.5.23</version>
    </dependency>
    <!-- Der Generator (V 4.3.1) erzeugt import org.openapitools.jackson.nullable.JsonNullable; (hs) -->
    <!-- Siehe https://github.com/OpenAPITools/openapi-generator/issues/2901 -->
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.2.1</version>
    </dependency>

    <!-- Test Dependencies -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.16.1</version>
      <scope>test</scope>
    </dependency>

    <!-- Test whether REST-API implementation meets spec - see public class OpenApiSpecificationTest (hs) -->
    <dependency>
      <groupId>de.codecentric.hikaku</groupId>
      <artifactId>hikaku-openapi</artifactId>
      <version>3.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.codecentric.hikaku</groupId>
      <artifactId>hikaku-spring</artifactId>
      <version>3.1.2</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/target/generated-sources/jsonschema2pojo</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jsonschema2pojo</groupId>
        <artifactId>jsonschema2pojo-maven-plugin</artifactId>
        <version>1.0.2</version>
        <configuration>
          <sourceDirectory>${basedir}/src/main/resources/api/schemas-json</sourceDirectory>
          <sourceType>jsonschema</sourceType>
          <targetPackage>com.giraone.jsonschema.models.v2</targetPackage>
          <outputDirectory>src/main/java</outputDirectory>

          <includeAdditionalProperties>false</includeAdditionalProperties>
          <generateBuilders>true</generateBuilders>
          <includeToString>true</includeToString>
          <usePrimitives>true</usePrimitives>
          <formatDates>true</formatDates>
          <formatDateTimes>true</formatDateTimes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>5.0.0-beta</version>
        <executions>

          <!-- This is V1 - everything is generated with openapitools -->
          <execution>
            <id>generate-v1</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/api/open-api.yaml</inputSpec>
              <output>.</output>

              <generatorName>spring</generatorName>
              <apiPackage>com.giraone.jsonschema.api.v1</apiPackage>
              <modelPackage>com.giraone.jsonschema.models.v1</modelPackage>

              <serverVariableOverrides></serverVariableOverrides>
              <generateModels>true</generateModels>
              <generateApis>true</generateApis>
              <!-- @ApiOperation, ... -->
              <generateModelDocumentation>false</generateModelDocumentation>
              <!-- @ApiModel, @ApiModelProperty, ... -->
              <generateApiDocumentation>false</generateApiDocumentation>
              <!-- No tests -->
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <!-- Will generate SpringBootApplication and Helper classes. -->
              <generateSupportingFiles>false</generateSupportingFiles>

              <strictSpec>false</strictSpec>
              <skipValidateSpec>false</skipValidateSpec>

              <typeMappings>
                <typeMapping>OffsetDateTime=LocalDateTime</typeMapping>
              </typeMappings>
              <importMappings>
                <importMapping>java.time.OffsetDateTime=java.time.LocalDateTime</importMapping>
              </importMappings>

              <configOptions>
                <sourceFolder>src/main/java</sourceFolder>
                <java8>false</java8>
                <dateLibrary>java8</dateLibrary>
                <!-- Use tags for class naming of the API -->
                <useTags>true</useTags>
                <!-- Generate no SpringBootController when using "spring" generator -->
                <interfaceOnly>true</interfaceOnly>
              </configOptions>

            </configuration>
          </execution>

          <!-- This is V2 - API interface is generated with openapitools, models with jsonschema2pojo -->
          <execution>
            <id>generate-v2</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${project.basedir}/src/main/resources/api/open-api.yaml</inputSpec>
              <output>.</output>

              <generatorName>spring</generatorName>
              <apiPackage>com.giraone.jsonschema.api.v2</apiPackage>
              <modelPackage>com.giraone.jsonschema.models.v2</modelPackage>

              <generateModels>false</generateModels>
              <generateApis>true</generateApis>
              <!-- @ApiOperation, ... -->
              <generateModelDocumentation>false</generateModelDocumentation>
              <!-- @ApiModel, @ApiModelProperty, ... -->
              <generateApiDocumentation>false</generateApiDocumentation>
              <!-- No tests -->
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <!-- Will generate SpringBootApplication and Helper classes. -->
              <generateSupportingFiles>false</generateSupportingFiles>

              <strictSpec>false</strictSpec>
              <skipValidateSpec>false</skipValidateSpec>

              <configOptions>
                <sourceFolder>src/main/java</sourceFolder>
                <java8>false</java8>
                <dateLibrary>java8</dateLibrary>
                <!-- Use tags for class naming of the API -->
                <useTags>true</useTags>
                <!-- Generate no SpringBootController when using "spring" generator -->
                <interfaceOnly>true</interfaceOnly>
              </configOptions>

            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
